@property --slide-distance {
    syntax: '<length>';
    initial-value: 30px;
    inherits: false;
  }
  
  :root {
    --animation-duration: 0.6s;
    --animation-easing: cubic-bezier(0.25, 0.1, 0.25, 1);
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(var(--slide-distance));
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes slideInFromLeft {
    from {
      opacity: 0;
      transform: translateX(calc(-1 * var(--slide-distance)));
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  @keyframes slideInFromRight {
    from {
      opacity: 0;
      transform: translateX(var(--slide-distance));
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }
  
  .animate-fadeIn {
    animation: fadeIn var(--animation-duration) var(--animation-easing);
    will-change: opacity;
  }
  
  .animate-fadeInUp {
    animation: fadeInUp var(--animation-duration) var(--animation-easing);
    will-change: opacity, transform;
  }
  
  .animate-slideInFromLeft {
    animation: slideInFromLeft var(--animation-duration) var(--animation-easing);
    will-change: opacity, transform;
  }
  
  .animate-slideInFromRight {
    animation: slideInFromRight var(--animation-duration) var(--animation-easing);
    will-change: opacity, transform;
  }
  
  .animate-delay-100 {
    animation-delay: 100ms;
  }
  
  .animate-delay-200 {
    animation-delay: 200ms;
  }
  
  .animate-delay-300 {
    animation-delay: 300ms;
  }
  
  .hover-lift {
    transition: transform 0.3s var(--animation-easing), opacity 0.3s var(--animation-easing);
  }
  
  .hover-lift:hover {
    transform: translateY(-3px) scale(1.02);
    opacity: 0.95; 
  }
  
  .hover-lift:active {
    transform: translateY(0);
    opacity: 1; 
  }
  
  @media (prefers-reduced-motion: reduce) {
    :root {
      --animation-duration: 0.01s;
      --slide-distance: 0px;
    }
  
    .hover-lift:hover {
      transform: none;
      opacity: 1;
    }
  }

  #darkModeToggle {
    position: relative;
    display: inline-block;
    width: 3.5rem; /* 56px */
    height: 2rem;  /* 32px */
    background-color: #e2e8f0;
    border-radius: 9999px;
    transition: background-color 0.3s ease-in-out;
    cursor: pointer;
  }
  
  #darkModeToggle .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
  
  #darkModeToggle:hover {
    background-color: #d1d5db;
  }
  
  #darkModeToggle:focus {
    outline: none;
    box-shadow: 0 0 0 4px rgba(66, 153, 225, 0.5);
  }
  
  #darkModeToggle div {
    position: absolute;
    top: 0.125rem; /* 2px */
    left: 0.125rem; /* 2px */
    width: 1.75rem; /* 28px */
    height: 1.75rem; /* 28px */
    background-color: #fff;
    border-radius: 50%;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, background-color 0.3s ease;
  }
  
  #darkModeToggle div i {
    font-size: 0.875rem;
    pointer-events: none;
  }
  
  #darkModeToggle.dark {
    background-color: #4a5568;
  }
  
  #darkModeToggle.dark div {
    transform: translateX(1.75rem);
  }
  
  #darkModeToggle.dark:hover {
    background-color: #2d3748;
  }
  
